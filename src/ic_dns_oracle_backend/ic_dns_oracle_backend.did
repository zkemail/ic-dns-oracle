type SignedDkimPublicKey =
    record {
        selector: text;
        domain: text;
        signature: text;
        public_key: text;
        public_key_hash: text;
    };
type SignedRevocation =
    record {
        selector: text;
        domain: text;
        signature: text;
        public_key: text;
        public_key_hash: text;
        private_key: text;
    };
service : (opt variant {  Development; Staging; Production; }, text, text) -> {
    pre_upgrade_function: () -> ();
    post_upgrade_function: (text, text) -> ();
    get_ethereum_address: () -> (text) query;
    get_poseidon_canister_id: () -> (text) query;
    get_dns_client_canister_id: () -> (text) query;
    read_log_from_first: (nat64) -> (vec text) query;
    read_log_from_last: (nat64) -> (vec text) query;
    sign_dkim_public_key: (text, text) -> (variant { Ok: SignedDkimPublicKey; Err: text });
    revoke_dkim_public_key: (text, text, text) -> (variant { Ok: SignedRevocation; Err: text });
}
