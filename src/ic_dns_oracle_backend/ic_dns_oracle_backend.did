type Environment = variant { Production; Development; Staging };
type Result = variant { Ok : SignedRevocation; Err : text };
type Result_1 = variant { Ok : SignedDkimPublicKey; Err : text };
type SignedDkimPublicKey = record {
  signature : text;
  domain : text;
  public_key : text;
  selector : text;
  public_key_hash : text;
};
type SignedRevocation = record {
  signature : text;
  domain : text;
  public_key : text;
  private_key : text;
  selector : text;
  public_key_hash : text;
};
service : (opt Environment, text, text) -> {
  get_dns_client_canister_id : () -> (text) query;
  get_ethereum_address : () -> (text) query;
  get_poseidon_canister_id : () -> (text) query;
  read_log_from_first : (nat64) -> (vec text) query;
  read_log_from_last : (nat64) -> (vec text) query;
  revoke_dkim_public_key : (text, text, text) -> (Result);
  sign_dkim_public_key : (text, text) -> (Result_1);
}
